---
# Source: openshift-data-foundations/templates/rbac/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odf-node-label-sa
  namespace: openshift-storage
  annotations:
    argocd.argoproj.io/sync-hook: "PreSync"
    argocd.argoproj.io/sync-wave: "-10"
---
# Source: openshift-data-foundations/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: label-storage-nodes
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - patch
      - update
---
# Source: openshift-data-foundations/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edit-storageclass
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
rules:
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    resourceNames:
      - ocs-storagecluster-ceph-rbd
      - gp2
    verbs:
      - get
      - list
      - patch
      - update
---
# Source: openshift-data-foundations/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: label-storage-nodes
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
subjects:
- kind: ServiceAccount
  name: odf-node-label-sa
  namespace: openshift-storage
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: label-storage-nodes
  apiGroup: rbac.authorization.k8s.io
---
# Source: openshift-data-foundations/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edit-storageclass
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
subjects:
- kind: ServiceAccount
  name: odf-node-label-sa
  namespace: openshift-storage
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: edit-storageclass
  apiGroup: rbac.authorization.k8s.io
---
# Source: openshift-data-foundations/templates/job-labelNodes.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: job-label-storage-nodes
  namespace: openshift-storage
spec:
  template:
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        command:
        - /bin/bash
        - -c
        - |
          oc label nodes -l node-role.kubernetes.io/worker= cluster.ocs.openshift.io/openshift-storage='' --overwrite
        name: label-storage-nodes
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: odf-node-label-sa
      serviceAccountName: odf-node-label-sa
      terminationGracePeriodSeconds: 300
---
# Source: openshift-data-foundations/templates/cephtoolbox.yaml
apiVersion: ocs.openshift.io/v1
kind: OCSInitialization
metadata:
  name: ocsinit
  namespace: openshift-storage
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  enableCephTools: true
---
# Source: openshift-data-foundations/templates/odf-storagecluster.yaml
apiVersion: ocs.openshift.io/v1
kind: StorageCluster
metadata:
  namespace: openshift-storage
  name: ocs-storagecluster
spec:
  resources:
    mon:
      requests:
        cpu: '1'
        memory: 2Gi
    mds:
      requests:
        cpu: '3'
        memory: 8Gi
    mgr:
      requests:
        cpu: '1'
        memory: 3Gi
    noobaa-core:
      requests:
        cpu: '1'
        memory: 4Gi
    noobaa-db:
      requests:
        cpu: '1'
        memory: 4Gi
  storageDeviceSets:
  - name: ocs-deviceset
    config: {}
    count: 1
    replica: 3
    resources:
      requests:
        cpu: '2'
        memory: 5Gi
    placement: {}
    preparePlacement: {}
    dataPVCTemplate:
      metadata: {}
      spec:
        storageClassName: gp2
        accessModes:
        - ReadWriteOnce
        volumeMode: Block
        resources:
          requests:
            storage: 2Ti
      status: {}
    portable: true
